- name: disable node
  ansible.builtin.command: dnf module disable nodejs -y

- name: disable node
  ansible.builtin.command: dnf module enable nodejs:20 -y 

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: create user
  ansible.builtin.user:
    name: expense


- name: create dir
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download file of backend
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: Unarchive a file Unzip
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: npm Install node.js package.
  community.general.npm:
    path: /app

- name: Copy file with owner and permissions
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install MySQL libraries
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  # - cryptography
  - PyMySQL

- name: import mysql
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: root
    login_password: ExpenseApp@1
    login_host: mysql.daws82s.fun
    target: /app/schema/backend.sql


- name: demon reload
  ansible.builtin.systemd_service:
    name: backend
    daemon_reload: true
    state: restarted
    enabled: true    
